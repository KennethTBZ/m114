# Kryptografie Teil 2

#### Diffie-Hellman

**Berechnung**: Teilschlüssel durch modulare Exponentiation (`g^a mod p`)

**Effekt kleiner Primzahlen**:
System wird durch Brute-Force angreifbar.

**Ziel erreicht**:
Geheimer Schlüssel wird über einen öffentlichen Kanal geteilt, ohne ihn direkt zu übertragen.

---

#### RSA

**Problem kleiner p/q-Werte**:
Leicht faktorisiert → private Schlüssel gefährdet.

**Mathematische Grundlage**:
`C = M^e mod n` (modulare Exponentiation)

**Unterschied zu Diffie-Hellman**:

* **RSA**: Vollständiges Verschlüsselungsverfahren
* **Diffie-Hellman**: Nur für Schlüsselaustausch

---

#### Hybride Verschlüsselungsverfahren

**Zweck des Session-Keys**:

* Symmetrisch (z.B. AES) → für Geschwindigkeit
* Asymmetrisch (z.B. RSA) → für sicheren Schlüsselaustausch

**Ergebnis**: Kombination der Vorteile beider Verfahren.

---

#### Hash-Algorithmus

**Beobachtung**:
Kleinste Textänderung → komplett neuer Hash (Lawineneffekt)

**Unterschiede der Funktionen**:

* Algorithmus
* Länge des Hashwerts
* Sicherheitsniveau (z.B. Kollisionsresistenz)

**Sichere Hashfunktionen**:

* SHA-2 (z.B. SHA-256)
* SHA-3
  *(MD5 und SHA-1 gelten als unsicher)*

---

#### Digital signieren

**Feststellung**:

* Signatur nur bei **unverändertem Dokument** gültig
* Sichert **Integrität**

---

#### Hash-Funktion auf dem Prüfstand

**Angriffsszenario**:

* Schwacher Hash (z.B. MD2) → zwei Dokumente mit gleichem Hash (Kollision)
* Harmloses Dokument wird signiert → Signatur gilt auch für das schädliche

**Schlussfolgerung**:

* Keine fremden, unbekannten Inhalte signieren
* Nur sichere, moderne Hashfunktionen verwenden

